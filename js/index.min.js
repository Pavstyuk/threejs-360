import*as THREE from"three";import{OrbitControls}from"three/addons/controls/OrbitControls.js";let width,height;const canvasA=document.getElementById("canvas-a"),canvasB=document.getElementById("canvas-b"),setSizes=()=>{window.innerWidth>window.innerHeight?(width=window.innerWidth/2,height=window.innerHeight):(width=window.innerWidth,height=window.innerHeight/2)};setSizes(),window.addEventListener("resize",(()=>{setSizes(),rendererA.setSize(width,height),rendererA.setPixelRatio(Math.min(window.devicePixelRatio,2)),cameraA.aspect=width/height,cameraA.updateProjectionMatrix(),rendererB.setSize(width,height),rendererB.setPixelRatio(Math.min(window.devicePixelRatio,2)),cameraB.aspect=width/height,cameraB.updateProjectionMatrix()}));const colorDark=1118498,colorBlue=4678573,colorGreen=3002266,colorLight=15790327,near=50,far=100,ambientLight=new THREE.AmbientLight(16777215,3),dirLight=new THREE.DirectionalLight(16777215,1.5);dirLight.castShadow=!0,dirLight.shadow.mapSize.width=512,dirLight.shadow.mapSize.height=512,dirLight.position.set(0,2,5),dirLight.lookAt(0,0,0);const dirLight2=new THREE.DirectionalLight(16777215,1.5);dirLight2.castShadow=!0,dirLight2.shadow.mapSize.width=512,dirLight2.shadow.mapSize.height=512,dirLight2.position.set(0,-2,-5),dirLight2.lookAt(0,0,0);const cameraA=new THREE.PerspectiveCamera(60,width/height,.01,500);cameraA.name="Camera_A",cameraA.position.set(0,0,3);const cameraB=new THREE.PerspectiveCamera(60,width/height,.01,500);cameraB.name="Camera_B",cameraA.add(cameraB);const sceneA=new THREE.Scene({}),sceneB=new THREE.Scene({});sceneA.background=new THREE.Color(15790327),sceneB.background=new THREE.Color(15790327);const loader=new THREE.TextureLoader,texture=loader.load("./images/back.webp",(()=>{texture.mapping=THREE.EquirectangularReflectionMapping,texture.colorSpace=THREE.SRGBColorSpace,sceneA.background=texture})),geometry=new THREE.BoxGeometry(1,1,1),material=new THREE.MeshPhysicalMaterial({flatShading:!0,color:4678573,fog:!0,roughness:.5,metalness:.5,sheen:1,sheenRoughness:.5,sheenColor:15790327});let cube=new THREE.Mesh(geometry,material);cube.position.set(0,0,0);const rendererA=new THREE.WebGLRenderer({canvas:canvasA,antialias:!0});rendererA.setSize(width,height),rendererA.setPixelRatio(Math.min(window.devicePixelRatio,2));const rendererB=new THREE.WebGLRenderer({canvas:canvasB,antialias:!0});rendererB.setSize(width,height),rendererB.setPixelRatio(Math.min(window.devicePixelRatio,2));const controlsA=new OrbitControls(cameraA,canvasA);controlsA.enableDamping=!0,controlsA.enableZoom=!0,controlsA.enablePan=!1,controlsA.target.set(0,0,0),controlsA.update();const controlsB=new OrbitControls(cameraA,canvasB);controlsB.enableDamping=!0,controlsB.enableZoom=!0,controlsB.enablePan=!1,controlsB.target.set(0,0,0),controlsB.update();const stats=new Stats;stats.showPanel(0),document.body.appendChild(stats.dom),sceneA.add(cameraA),sceneB.add(ambientLight,dirLight,dirLight2),sceneB.add(cube);const clock=new THREE.Clock,animation=()=>{stats.begin(),controlsA.update(),rendererA.render(sceneA,cameraA),controlsB.update(),rendererB.render(sceneB,cameraB),stats.end(),rendererA.setAnimationLoop(animation),rendererB.setAnimationLoop(animation)};animation();